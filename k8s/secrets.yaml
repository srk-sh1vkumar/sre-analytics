apiVersion: v1
kind: Secret
metadata:
  name: appdynamics-secret
  namespace: monitoring
type: Opaque
data:
  # Base64 encoded values
  # To encode: echo -n 'your-value' | base64
  controller-host: <base64-encoded-controller-host>  # Replace with your AppDynamics controller host
  client-id: <base64-encoded-client-id>  # Replace with your AppDynamics client ID
  client-secret: <base64-encoded-client-secret>  # Replace with your AppDynamics client secret

---
apiVersion: v1
kind: Secret
metadata:
  name: llm-secrets
  namespace: monitoring
type: Opaque
data:
  # Base64 encoded LLM API keys (optional)
  # openai-key: <base64-encoded-openai-key>
  # anthropic-key: <base64-encoded-anthropic-key>

---
# RBAC for SRE Analytics
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sre-analytics-sa
  namespace: monitoring

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sre-analytics-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["*"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sre-analytics-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sre-analytics-role
subjects:
- kind: ServiceAccount
  name: sre-analytics-sa
  namespace: monitoring

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      - "sre_rules.yml"

    scrape_configs:
    - job_name: 'sre-analytics'
      static_configs:
      - targets: ['sre-analytics-service:80']
      metrics_path: /metrics
      scrape_interval: 30s

    - job_name: 'kubernetes-pods'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true

  sre_rules.yml: |
    groups:
    - name: sre_alerts
      rules:
      - alert: HighErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value }} errors per second"

      - alert: HighLatency
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 0.5
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "High latency detected"
          description: "95th percentile latency is {{ $value }} seconds"

      - alert: SLOBreach
        expr: (1 - availability_slo) > 0.001  # 99.9% availability breached
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "SLO availability breach"
          description: "Service availability is below SLO threshold"